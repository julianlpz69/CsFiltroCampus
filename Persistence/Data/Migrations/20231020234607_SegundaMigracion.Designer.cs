// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(TiendaRopaDBcontext))]
    [Migration("20231020234607_SegundaMigracion")]
    partial class SegundaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<double>("SueldoBase")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("cargo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Limpiador",
                            SueldoBase = 50000.0
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Estilista",
                            SueldoBase = 100000.0
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Cajera",
                            SueldoBase = 70000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersonaFK")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipioFk");

                    b.HasIndex("IdTipoPersonaFK");

                    b.ToTable("Cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoCliente = "1912",
                            FechaRegistro = new DateOnly(2023, 12, 21),
                            IdMunicipioFk = 1,
                            IdTipoPersonaFK = 1,
                            NombreCliente = "Pedro David"
                        },
                        new
                        {
                            Id = 2,
                            CodigoCliente = "1923",
                            FechaRegistro = new DateOnly(2023, 12, 23),
                            IdMunicipioFk = 2,
                            IdTipoPersonaFK = 1,
                            NombreCliente = "Jose Jose"
                        },
                        new
                        {
                            Id = 3,
                            CodigoCliente = "1920",
                            FechaRegistro = new DateOnly(2023, 12, 25),
                            IdMunicipioFk = 3,
                            IdTipoPersonaFK = 1,
                            NombreCliente = "Chayan"
                        },
                        new
                        {
                            Id = 4,
                            CodigoCliente = "1921",
                            FechaRegistro = new DateOnly(2023, 12, 26),
                            IdMunicipioFk = 1,
                            IdTipoPersonaFK = 1,
                            NombreCliente = "Luis Miguel"
                        },
                        new
                        {
                            Id = 5,
                            CodigoCliente = "1934",
                            FechaRegistro = new DateOnly(2023, 12, 29),
                            IdMunicipioFk = 1,
                            IdTipoPersonaFK = 1,
                            NombreCliente = "Don Omar"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Color", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Rosa"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Magenta"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Naranja"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Rojo"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Azul"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPaisFK")
                        .HasColumnType("int");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("IdPaisFK");

                    b.ToTable("Departamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdPaisFK = 1,
                            NombreDepartamento = "Santander"
                        },
                        new
                        {
                            Id = 2,
                            IdPaisFK = 1,
                            NombreDepartamento = "Cundinamarca"
                        },
                        new
                        {
                            Id = 3,
                            IdPaisFK = 2,
                            NombreDepartamento = "Carabobo"
                        },
                        new
                        {
                            Id = 4,
                            IdPaisFK = 2,
                            NombreDepartamento = "Caracas"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DetalleOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadProducida")
                        .HasColumnType("int");

                    b.Property<int>("CatidadProducir")
                        .HasColumnType("int");

                    b.Property<int>("IdColorFK")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenFK")
                        .HasColumnType("int");

                    b.Property<int>("IdPrendaFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdColorFK");

                    b.HasIndex("IdEstadoFK");

                    b.HasIndex("IdOrdenFK");

                    b.HasIndex("IdPrendaFK");

                    b.ToTable("detalle_orden", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadProducida = 20,
                            CatidadProducir = 100,
                            IdColorFK = 1,
                            IdEstadoFK = 1,
                            IdOrdenFK = 1,
                            IdPrendaFK = 1
                        },
                        new
                        {
                            Id = 2,
                            CantidadProducida = 22,
                            CatidadProducir = 80,
                            IdColorFK = 2,
                            IdEstadoFK = 2,
                            IdOrdenFK = 2,
                            IdPrendaFK = 2
                        },
                        new
                        {
                            Id = 3,
                            CantidadProducida = 24,
                            CatidadProducir = 70,
                            IdColorFK = 3,
                            IdEstadoFK = 1,
                            IdOrdenFK = 3,
                            IdPrendaFK = 3
                        },
                        new
                        {
                            Id = 4,
                            CantidadProducida = 25,
                            CatidadProducir = 50,
                            IdColorFK = 1,
                            IdEstadoFK = 2,
                            IdOrdenFK = 1,
                            IdPrendaFK = 1
                        },
                        new
                        {
                            Id = 5,
                            CantidadProducida = 26,
                            CatidadProducir = 30,
                            IdColorFK = 4,
                            IdEstadoFK = 1,
                            IdOrdenFK = 2,
                            IdPrendaFK = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdInventarioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdTallaFk")
                        .HasColumnType("int");

                    b.Property<int>("IdVentaFK")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnit")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdInventarioFK");

                    b.HasIndex("IdTallaFk");

                    b.HasIndex("IdVentaFK");

                    b.ToTable("detalle_venta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 20,
                            IdInventarioFK = 1,
                            IdTallaFk = 1,
                            IdVentaFK = 1,
                            ValorUnit = 10000.0
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 22,
                            IdInventarioFK = 2,
                            IdTallaFk = 2,
                            IdVentaFK = 2,
                            ValorUnit = 20000.0
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 24,
                            IdInventarioFK = 3,
                            IdTallaFk = 3,
                            IdVentaFK = 3,
                            ValorUnit = 30000.0
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 25,
                            IdInventarioFK = 1,
                            IdTallaFk = 1,
                            IdVentaFK = 1,
                            ValorUnit = 10000.0
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 26,
                            IdInventarioFK = 2,
                            IdTallaFk = 2,
                            IdVentaFK = 2,
                            ValorUnit = 40000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<int>("IdCargoFK")
                        .HasColumnType("int");

                    b.Property<string>("IdEmpleado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpleado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("IdCargoFK");

                    b.HasIndex("IdMunicipioFk");

                    b.ToTable("Empleado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaIngreso = new DateOnly(2023, 11, 21),
                            IdCargoFK = 1,
                            IdEmpleado = "",
                            IdMunicipioFk = 1,
                            NombreEmpleado = "Ozuna"
                        },
                        new
                        {
                            Id = 2,
                            FechaIngreso = new DateOnly(2023, 11, 21),
                            IdCargoFK = 1,
                            IdEmpleado = "",
                            IdMunicipioFk = 2,
                            NombreEmpleado = "Romeo Santos"
                        },
                        new
                        {
                            Id = 3,
                            FechaIngreso = new DateOnly(2023, 11, 21),
                            IdCargoFK = 2,
                            IdEmpleado = "",
                            IdMunicipioFk = 3,
                            NombreEmpleado = "Karol G"
                        },
                        new
                        {
                            Id = 4,
                            FechaIngreso = new DateOnly(2023, 11, 21),
                            IdCargoFK = 2,
                            IdEmpleado = "",
                            IdMunicipioFk = 1,
                            NombreEmpleado = "Luis Fonsi"
                        },
                        new
                        {
                            Id = 5,
                            FechaIngreso = new DateOnly(2023, 11, 21),
                            IdCargoFK = 3,
                            IdEmpleado = "",
                            IdMunicipioFk = 2,
                            NombreEmpleado = "Drake"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("NitEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("RepresentanteLegal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipioFk");

                    b.ToTable("Empresa", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateOnly(2003, 11, 21),
                            IdMunicipioFk = 1,
                            NitEmpresa = "10023123",
                            RazonSocial = "Sin Animo de Lucro",
                            RepresentanteLegal = "Suits"
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateOnly(2013, 11, 21),
                            IdMunicipioFk = 2,
                            NitEmpresa = "1002023",
                            RazonSocial = "Ganar Plata",
                            RepresentanteLegal = "Suits"
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateOnly(2002, 11, 21),
                            IdMunicipioFk = 3,
                            NitEmpresa = "1006969",
                            RazonSocial = "Sin Animo de Lucro",
                            RepresentanteLegal = "Suits"
                        },
                        new
                        {
                            Id = 4,
                            FechaCreacion = new DateOnly(2005, 11, 21),
                            IdMunicipioFk = 1,
                            NitEmpresa = "1005544",
                            RazonSocial = "Ganar Plata",
                            RepresentanteLegal = "Suits"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("IdTipoEstadoFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoEstadoFK");

                    b.ToTable("Estado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Finalizado",
                            IdTipoEstadoFK = 1
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Descansando",
                            IdTipoEstadoFK = 2
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "No lo voy a hacer",
                            IdTipoEstadoFK = 2
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Vendido",
                            IdTipoEstadoFK = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("forma_pago", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Tarjeta"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "En Especie"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Genero", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Femenino"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Unisex"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreInsumo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("StockMax")
                        .HasColumnType("int");

                    b.Property<int>("StockMin")
                        .HasColumnType("int");

                    b.Property<double>("ValorUnit")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Insumo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreInsumo = "Tela",
                            StockMax = 100,
                            StockMin = 20,
                            ValorUnit = 10000.0
                        },
                        new
                        {
                            Id = 2,
                            NombreInsumo = "Botones",
                            StockMax = 100,
                            StockMin = 20,
                            ValorUnit = 5000.0
                        },
                        new
                        {
                            Id = 3,
                            NombreInsumo = "Aguja",
                            StockMax = 100,
                            StockMin = 20,
                            ValorUnit = 2000.0
                        },
                        new
                        {
                            Id = 4,
                            NombreInsumo = "Pintura",
                            StockMax = 100,
                            StockMin = 20,
                            ValorUnit = 15000.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.InsumoPrenda", b =>
                {
                    b.Property<int>("IdInsumoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdPrendaFK")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdInsumoFK", "IdPrendaFK");

                    b.HasIndex("IdPrendaFK");

                    b.ToTable("insumo_prenda", (string)null);

                    b.HasData(
                        new
                        {
                            IdInsumoFK = 1,
                            IdPrendaFK = 1,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 2,
                            IdPrendaFK = 1,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdPrendaFK = 1,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 3,
                            IdPrendaFK = 2,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdPrendaFK = 2,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 1,
                            IdPrendaFK = 3,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 2,
                            IdPrendaFK = 3,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 3,
                            IdPrendaFK = 4,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdPrendaFK = 4,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdPrendaFK = 5,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInsumoFK = 2,
                            IdPrendaFK = 5,
                            Cantidad = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.InsumoProveedor", b =>
                {
                    b.Property<int>("IdInsumoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedorFK")
                        .HasColumnType("int");

                    b.HasKey("IdInsumoFK", "IdProveedorFK");

                    b.HasIndex("IdProveedorFK");

                    b.ToTable("insumo_proveedor", (string)null);

                    b.HasData(
                        new
                        {
                            IdInsumoFK = 1,
                            IdProveedorFK = 1
                        },
                        new
                        {
                            IdInsumoFK = 2,
                            IdProveedorFK = 1
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdProveedorFK = 1
                        },
                        new
                        {
                            IdInsumoFK = 3,
                            IdProveedorFK = 2
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdProveedorFK = 2
                        },
                        new
                        {
                            IdInsumoFK = 1,
                            IdProveedorFK = 3
                        },
                        new
                        {
                            IdInsumoFK = 2,
                            IdProveedorFK = 3
                        },
                        new
                        {
                            IdInsumoFK = 3,
                            IdProveedorFK = 4
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdProveedorFK = 4
                        },
                        new
                        {
                            IdInsumoFK = 4,
                            IdProveedorFK = 5
                        },
                        new
                        {
                            IdInsumoFK = 2,
                            IdProveedorFK = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoInventario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("IdPredaFK")
                        .HasColumnType("int");

                    b.Property<double>("ValorVtaCop")
                        .HasColumnType("double");

                    b.Property<double>("ValorVtaUsd")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdPredaFK");

                    b.ToTable("Inventario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoInventario = "12332",
                            IdPredaFK = 1,
                            ValorVtaCop = 200000.0,
                            ValorVtaUsd = 20.0
                        },
                        new
                        {
                            Id = 2,
                            CodigoInventario = "1234",
                            IdPredaFK = 2,
                            ValorVtaCop = 220000.0,
                            ValorVtaUsd = 22.0
                        },
                        new
                        {
                            Id = 3,
                            CodigoInventario = "4321",
                            IdPredaFK = 3,
                            ValorVtaCop = 240000.0,
                            ValorVtaUsd = 24.0
                        },
                        new
                        {
                            Id = 4,
                            CodigoInventario = "54231",
                            IdPredaFK = 4,
                            ValorVtaCop = 250000.0,
                            ValorVtaUsd = 25.0
                        },
                        new
                        {
                            Id = 5,
                            CodigoInventario = "1235",
                            IdPredaFK = 5,
                            ValorVtaCop = 260000.0,
                            ValorVtaUsd = 26.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.InventarioTalla", b =>
                {
                    b.Property<int>("IdInventarioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdTallaFk")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdInventarioFK", "IdTallaFk");

                    b.HasIndex("IdTallaFk");

                    b.ToTable("inventario_talla", (string)null);

                    b.HasData(
                        new
                        {
                            IdInventarioFK = 1,
                            IdTallaFk = 1,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 1,
                            IdTallaFk = 2,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 1,
                            IdTallaFk = 4,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 2,
                            IdTallaFk = 3,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 2,
                            IdTallaFk = 4,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 3,
                            IdTallaFk = 1,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 3,
                            IdTallaFk = 2,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 4,
                            IdTallaFk = 3,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 4,
                            IdTallaFk = 4,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 5,
                            IdTallaFk = 4,
                            Cantidad = 0
                        },
                        new
                        {
                            IdInventarioFK = 5,
                            IdTallaFk = 2,
                            Cantidad = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdDepartamentoFK")
                        .HasColumnType("int");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartamentoFK");

                    b.ToTable("municipio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdDepartamentoFK = 1,
                            NombreMunicipio = "Bucaramanga"
                        },
                        new
                        {
                            Id = 2,
                            IdDepartamentoFK = 1,
                            NombreMunicipio = "Giron"
                        },
                        new
                        {
                            Id = 3,
                            IdDepartamentoFK = 1,
                            NombreMunicipio = "Floridablanca"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaOrden")
                        .HasColumnType("date");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.HasIndex("IdEmpleadoFk");

                    b.HasIndex("IdEstadoFK");

                    b.ToTable("Orden", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaOrden = new DateOnly(2003, 11, 21),
                            IdClienteFK = 1,
                            IdEmpleadoFk = 1,
                            IdEstadoFK = 3
                        },
                        new
                        {
                            Id = 2,
                            FechaOrden = new DateOnly(2003, 11, 25),
                            IdClienteFK = 2,
                            IdEmpleadoFk = 1,
                            IdEstadoFK = 3
                        },
                        new
                        {
                            Id = 3,
                            FechaOrden = new DateOnly(2003, 11, 26),
                            IdClienteFK = 3,
                            IdEmpleadoFk = 2,
                            IdEstadoFK = 3
                        },
                        new
                        {
                            Id = 4,
                            FechaOrden = new DateOnly(2003, 11, 27),
                            IdClienteFK = 4,
                            IdEmpleadoFk = 3,
                            IdEstadoFK = 3
                        },
                        new
                        {
                            Id = 5,
                            FechaOrden = new DateOnly(2003, 11, 28),
                            IdClienteFK = 5,
                            IdEmpleadoFk = 4,
                            IdEstadoFK = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombrePais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("pais", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombrePais = "Colombia"
                        },
                        new
                        {
                            Id = 2,
                            NombrePais = "Venezuela"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Prenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdGneroFK")
                        .HasColumnType("int");

                    b.Property<string>("IdPrenda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<int>("IdTipoProteccionFK")
                        .HasColumnType("int");

                    b.Property<string>("NombrePrenda")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<double>("ValorUnitCop")
                        .HasColumnType("double");

                    b.Property<double>("ValorUnitUsd")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoFK");

                    b.HasIndex("IdGneroFK");

                    b.HasIndex("IdTipoProteccionFK");

                    b.ToTable("Prenda", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEstadoFK = 1,
                            IdGneroFK = 1,
                            IdPrenda = "1002131",
                            IdTipoProteccionFK = 1,
                            NombrePrenda = "Camiceta",
                            ValorUnitCop = 50000.0,
                            ValorUnitUsd = 10.0
                        },
                        new
                        {
                            Id = 2,
                            IdEstadoFK = 1,
                            IdGneroFK = 2,
                            IdPrenda = "100231",
                            IdTipoProteccionFK = 2,
                            NombrePrenda = "Pantalon",
                            ValorUnitCop = 100000.0,
                            ValorUnitUsd = 20.0
                        },
                        new
                        {
                            Id = 3,
                            IdEstadoFK = 2,
                            IdGneroFK = 1,
                            IdPrenda = "100213",
                            IdTipoProteccionFK = 3,
                            NombrePrenda = "Vestido",
                            ValorUnitCop = 120000.0,
                            ValorUnitUsd = 25.0
                        },
                        new
                        {
                            Id = 4,
                            IdEstadoFK = 1,
                            IdGneroFK = 2,
                            IdPrenda = "200132",
                            IdTipoProteccionFK = 1,
                            NombrePrenda = "Gorra",
                            ValorUnitCop = 30000.0,
                            ValorUnitUsd = 7.0
                        },
                        new
                        {
                            Id = 5,
                            IdEstadoFK = 2,
                            IdGneroFK = 1,
                            IdPrenda = "2032132",
                            IdTipoProteccionFK = 2,
                            NombrePrenda = "Sudadera",
                            ValorUnitCop = 40000.0,
                            ValorUnitUsd = 9.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPersonaFK")
                        .HasColumnType("int");

                    b.Property<string>("NitProveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipioFk");

                    b.HasIndex("IdTipoPersonaFK");

                    b.ToTable("Proveedor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdMunicipioFk = 1,
                            IdTipoPersonaFK = 1,
                            NitProveedor = "1002312",
                            NombreProveedor = "Ropa la 15"
                        },
                        new
                        {
                            Id = 2,
                            IdMunicipioFk = 2,
                            IdTipoPersonaFK = 2,
                            NitProveedor = "1007766",
                            NombreProveedor = "LA ropera"
                        },
                        new
                        {
                            Id = 3,
                            IdMunicipioFk = 3,
                            IdTipoPersonaFK = 1,
                            NitProveedor = "1005432",
                            NombreProveedor = "La ropita"
                        },
                        new
                        {
                            Id = 4,
                            IdMunicipioFk = 1,
                            IdTipoPersonaFK = 2,
                            NitProveedor = "1001212",
                            NombreProveedor = "Ropa Masx"
                        },
                        new
                        {
                            Id = 5,
                            IdMunicipioFk = 2,
                            IdTipoPersonaFK = 2,
                            NitProveedor = "1006965",
                            NombreProveedor = "Guchi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdUsuarioFK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioFK");

                    b.ToTable("refresh_token", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("rolName");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreRol = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            NombreRol = "Empleado"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Talla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Talla", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "S"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "L"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "XL"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "XLL"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("tipo_estado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Finalizado"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "En Produccion"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Vendido"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreTipoPersona")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("tipo_persona", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreTipoPersona = "Persona Natural"
                        },
                        new
                        {
                            Id = 2,
                            NombreTipoPersona = "Persona Juridica"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoProteccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("tipo_proteccion", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "No Proteje"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Anti Fuego"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Anti Balas"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Anti Arañasos"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("password");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdRolFK")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioFK", "IdRolFK");

                    b.HasIndex("IdRolFK");

                    b.ToTable("userRol", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaVenta")
                        .HasColumnType("date");

                    b.Property<int>("IdClienteFK")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPago")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteFK");

                    b.HasIndex("IdEmpleadoFK");

                    b.HasIndex("IdFormaPago");

                    b.ToTable("Venta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaVenta = new DateOnly(2003, 11, 21),
                            IdClienteFK = 1,
                            IdEmpleadoFK = 1,
                            IdFormaPago = 1
                        },
                        new
                        {
                            Id = 2,
                            FechaVenta = new DateOnly(2003, 11, 25),
                            IdClienteFK = 2,
                            IdEmpleadoFK = 2,
                            IdFormaPago = 1
                        },
                        new
                        {
                            Id = 3,
                            FechaVenta = new DateOnly(2003, 11, 24),
                            IdClienteFK = 3,
                            IdEmpleadoFK = 3,
                            IdFormaPago = 2
                        },
                        new
                        {
                            Id = 4,
                            FechaVenta = new DateOnly(2003, 11, 26),
                            IdClienteFK = 4,
                            IdEmpleadoFK = 1,
                            IdFormaPago = 2
                        },
                        new
                        {
                            Id = 5,
                            FechaVenta = new DateOnly(2003, 11, 27),
                            IdClienteFK = 1,
                            IdEmpleadoFK = 4,
                            IdFormaPago = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Clientes")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTipoPersonaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.HasOne("Domain.Entities.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdPaisFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Domain.Entities.DetalleOrden", b =>
                {
                    b.HasOne("Domain.Entities.Colors", "Color")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdColorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdEstadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Orden", "Orden")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdOrdenFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Prenda", "Prenda")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdPrendaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Estado");

                    b.Navigation("Orden");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("Domain.Entities.DetalleVenta", b =>
                {
                    b.HasOne("Domain.Entities.Inventario", "Inventario")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdInventarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Talla", "Talla")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdTallaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Venta", "Venta")
                        .WithMany("DetalleVentas")
                        .HasForeignKey("IdVentaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("Talla");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.HasOne("Domain.Entities.Cargo", "Cargo")
                        .WithMany("Empleados")
                        .HasForeignKey("IdCargoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Empleados")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Domain.Entities.Empresa", b =>
                {
                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Empresas")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.HasOne("Domain.Entities.TipoEstado", "TipoEstado")
                        .WithMany("Estados")
                        .HasForeignKey("IdTipoEstadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEstado");
                });

            modelBuilder.Entity("Domain.Entities.InsumoPrenda", b =>
                {
                    b.HasOne("Domain.Entities.Insumo", "Insumo")
                        .WithMany("InsumoPrendas")
                        .HasForeignKey("IdInsumoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Prenda", "Prenda")
                        .WithMany("InsumoPrendas")
                        .HasForeignKey("IdPrendaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("Domain.Entities.InsumoProveedor", b =>
                {
                    b.HasOne("Domain.Entities.Insumo", "Insumo")
                        .WithMany("InsumoProveedores")
                        .HasForeignKey("IdInsumoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Proveedor", "Proveedor")
                        .WithMany("InsumoProveedores")
                        .HasForeignKey("IdProveedorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Entities.Inventario", b =>
                {
                    b.HasOne("Domain.Entities.Prenda", "Prenda")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdPredaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prenda");
                });

            modelBuilder.Entity("Domain.Entities.InventarioTalla", b =>
                {
                    b.HasOne("Domain.Entities.Inventario", "Inventario")
                        .WithMany("InventarioTallas")
                        .HasForeignKey("IdInventarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Talla", "Talla")
                        .WithMany("InventarioTallas")
                        .HasForeignKey("IdTallaFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("IdDepartamentoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Empleado", "Empleado")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEmpleadoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdEstadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Domain.Entities.Prenda", b =>
                {
                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany("Prendas")
                        .HasForeignKey("IdEstadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Genero", "Genero")
                        .WithMany("Prendas")
                        .HasForeignKey("IdGneroFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoProteccion", "TipoProteccion")
                        .WithMany("Prendas")
                        .HasForeignKey("IdTipoProteccionFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Genero");

                    b.Navigation("TipoProteccion");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdMunicipioFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdTipoPersonaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("IdUsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Domain.Entities.Rol", "Rol")
                        .WithMany("UsuariosRols")
                        .HasForeignKey("IdRolFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRols")
                        .HasForeignKey("IdUsuarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("IdClienteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Empleado", "Empleado")
                        .WithMany("Ventas")
                        .HasForeignKey("IdEmpleadoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("Ventas")
                        .HasForeignKey("IdFormaPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("FormaPago");
                });

            modelBuilder.Entity("Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Colors", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Navigation("DetalleOrdenes");

                    b.Navigation("Ordenes");

                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Domain.Entities.Genero", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("Domain.Entities.Insumo", b =>
                {
                    b.Navigation("InsumoPrendas");

                    b.Navigation("InsumoProveedores");
                });

            modelBuilder.Entity("Domain.Entities.Inventario", b =>
                {
                    b.Navigation("DetalleVentas");

                    b.Navigation("InventarioTallas");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Empresas");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Domain.Entities.Prenda", b =>
                {
                    b.Navigation("DetalleOrdenes");

                    b.Navigation("InsumoPrendas");

                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Navigation("InsumoProveedores");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Navigation("UsuariosRols");
                });

            modelBuilder.Entity("Domain.Entities.Talla", b =>
                {
                    b.Navigation("DetalleVentas");

                    b.Navigation("InventarioTallas");
                });

            modelBuilder.Entity("Domain.Entities.TipoEstado", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("Domain.Entities.TipoPersona", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Proveedores");
                });

            modelBuilder.Entity("Domain.Entities.TipoProteccion", b =>
                {
                    b.Navigation("Prendas");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UsuarioRols");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.Navigation("DetalleVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
